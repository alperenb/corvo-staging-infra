---
## This playbook deploys the whole application stack in this site.

# Apply common configuration to all hosts except proxmox.
- hosts: all:!proxmox
  gather_facts: false
  roles:
    - common
  tags:
    - common

# Configure Redis Cluster.
- hosts: redis_master
  roles:
    - role: redis
      sentinel:
        enabled: yes
        master: 
          ip: "{{ hostvars[inventory_hostname]['master'] }}"
          port: "{{ hostvars[groups['redis'][0]]['port'] }}"
        quorum: 2
  tags:
    - redis

- hosts: redis_slave
  roles:
    - role: redis
      sentinel:
        enabled: yes
        master:
          ip: "{{ hostvars[inventory_hostname]['master'] }}"
          port: "{{ hostvars[groups['redis_master'][0]]['port'] }}"
        quorum: 2
  tags:
    - redis

# RabbitMQ Cluster
- hosts: rabbitmq
  roles:
    - rabbitmq
  tags:
    - rabbitmq

# Create an NFS host
- hosts: nfs_server
  roles:
    - nfs
  tags:
    - nfs_server


# Configure NGinx load balancers with active/passive configuration via keepalived.
- hosts: nginx
  roles:
    - role: nginx
      upstreams:
        - name: REST_API
          servers:
            - "{{ hostvars[groups['restapi'][0]]['ansible_host'] }}:{{ hostvars[groups['restapi'][0]]['port'] }}"
            - "{{ hostvars[groups['restapi'][1]]['ansible_host'] }}:{{ hostvars[groups['restapi'][1]]['port'] }}"
        - name: LYREBIRD_WS
          servers:
            - "{{ hostvars[groups['lyrebird'][0]]['ansible_host'] }}:{{ hostvars[groups['lyrebird'][0]]['port'] }}"
            - "{{ hostvars[groups['lyrebird'][1]]['ansible_host'] }}:{{ hostvars[groups['lyrebird'][1]]['port'] }}"
    - role: keepalived
      virtual_ip: "{{ hostvars[groups['nginx'][0]]['virtual_ip'] }}"
      network_interface_name: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['interface'] }}"
      pid: nginx
    - role: nfs-client
      mappings:
        - name: photos
          source: "/photos"
          local_path: "{{ root_folder }}/photos"
        - name: reports
          source: "/reports"
          local_path: "{{ root_folder }}/reports"
  tasks:
    - include_tasks: deploy-to-nginx.yml
  tags:
    - nginx
    - jsclient

# Deploy Java microservices.

# Deploy restapi
- hosts: restapi
  roles:
    - role: nfs-client
      mappings:
        - name: photos
          source: "/photos"
          local_path: "{{ hostvars[inventory_hostname]['photos_location'] }}"
        - name: reports
          source: "/reports"
          local_path: "{{ hostvars[inventory_hostname]['reports_location'] }}"
    - role: java8-oracle
    - role: deploy-springboot-app-as-systemd-unit
      application_name: restapi
      executable_jar_name: files/fr-web-api-3.0.0.jar
      app_user: restapi
      app_group: corvus
      active_profile_name: staging
      profile_file: templates/restapi-staging.yml.j2
      SEAGULL_SERVER_ADDRESS:
      SEAGULL_CALLBACK_LISTENER_SERVER_ADDRESS:
      SEAGULL_ACTIVE_DB:
      EUREKA_HOST:
      EUREKA_PORT: 
      instances:
        - 8090
  tags:
    - restapi
    - java

# - hosts: lyrebird
#   roles:
#     - role: java8-oracle
#     - role: deploy-springboot-app-as-systemd-unit
#       application_name: lyrebird
#       executable_jar_name: lyrebird-0.0.1-SNAPSHOT.jar
#       app_user: lyrebird
#       app_group: corvus
#       instances:
#         - 7334

  